// C++
class Solution {
public:
    Node* constructLinkedMatrix(vector<vector<int>>& mat) {
        // Check for empty matrix
        int n = mat.size();
        if(n == 0) return nullptr;

        vector<vector<Node*>> nodeMatrix(n, vector<Node*>(n, nullptr));

        // Step 1: Create the nodes
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < n; j++) {
                nodeMatrix[i][j] = new Node(mat[i][j]);  // Create node for each element
            }
        }

        // Step 2: Link the nodes
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < n; j++) {
                if(j + 1 < n) {
                    nodeMatrix[i][j]->right = nodeMatrix[i][j + 1];  // Link right
                }
                if(i + 1 < n) {
                    nodeMatrix[i][j]->down = nodeMatrix[i + 1][j];  // Link down
                }
            }
        }

        // Return the top-left node
        return nodeMatrix[0][0];
    }
};
